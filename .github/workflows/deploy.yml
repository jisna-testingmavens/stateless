name: Deploy Stateless API to EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 1️⃣ Configure AWS credentials (IAM user)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 2️⃣ Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 3️⃣ Build & push Docker image
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "Building $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # 4️⃣ Configure kubectl for EKS
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      # 5️⃣ Deploy Kubernetes resources
      - name: Deploy to EKS
        run: |
          sed -i "s|image: .*|image: $IMAGE_URI|g" k8s-deployment.yaml
          kubectl apply -f k8s-deployment.yaml
          kubectl apply -f pod-manager-role.yaml
          kubectl apply -f pod-manager-binding.yaml

      # 6️⃣ Verify rollout
      - name: Verify deployment rollout
        run: kubectl rollout status deployment/stateless-api
